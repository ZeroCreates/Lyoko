-- Code Lyoko Supercomputer Script
-- CC:Tweaked Rednet Tower Control

local port = "8080"

-- List of known towers
local towers = {}

local gate = peripheral.find("advanced_crystal_interface")
function split(input, delimiter)
    local result = {}
    for part in string.gmatch(input, "([^" .. delimiter .. "]+)") do table.insert(result, part) end
    return result
  end
function dial(addressraw)
    encoding = 1
    if not gate.getIrisProgress == nil then
      local irisopen = gate.getIrisProgress()
      if irisopen > 0 then
        
        local iris = gate.openIris()
        if iris == true then
  
          repeat
            irisopen = gate.getIrisProgress()
            sleep(.1)
          until irisopen == 0
        end
      end
    end
    
    address = split(addressraw, "-")
    for _, symbol in pairs(address) do
      gate.engageSymbol(tonumber(symbol))
      sleep(1)
    end
    gate.engageSymbol(0)
  end

-- Helper: Centered print
local function printCentered(text, color)
    term.setTextColor(color or colors.white)
    local width, height = term.getSize()
    term.setCursorPos(math.floor((width - #text) / 2) + 1, math.floor(height / 2))
    term.clear()
    print(text)
end
local function flashScreen(times, color)
    for i = 1, times do
        term.setBackgroundColor(color)
        term.clear()
        sleep(0.1)
        term.setBackgroundColor(colors.black)
        term.clear()
        sleep(0.1)
    end
end

local function startup()
    term.setBackgroundColor(colors.black)
    term.clear()
    printCentered("BOOTING SUPERCOMPUTER SYSTEM...", colors.cyan)
    sleep(1)
    flashScreen(2, colors.lightBlue)
    printCentered("SYSTEM ONLINE", colors.green)
    sleep(1)
end

local function wakeTower()
    term.setBackgroundColor(colors.black)
    term.clear()
    printCentered("WAKING TOWER...", colors.blue)
    sleep(1)

    rednet.broadcast({command="wake"}, port)
end

local function scanTowers()
    towers = {}
    term.setBackgroundColor(colors.black)
    term.clear()
    printCentered("SCANNING...", colors.orange)
    sleep(1)

    rednet.broadcast({request="identify"}, port)

    local timer = os.startTimer(2)

    while true do
        local event, id, message, _ = os.pullEvent()

        if event == "rednet_message" then
            if message.response == "tower" then
                table.insert(towers, {id=id, type=message.towerType})
            end
        elseif event == "timer" and id == timer then
            break
        end
    end

    term.setBackgroundColor(colors.black)
    term.clear()

    if #towers == 0 then
        printCentered("NO TOWERS FOUND", colors.red)
    else
        printCentered("TOWERS FOUND:", colors.green)
        term.setCursorPos(1, 2)
        term.setTextColor(colors.white)
        for i, tower in ipairs(towers) do
            print(i..". Tower ID: "..tower.id.." | Type: "..tower.type)
        end
    end

    sleep(3)
end

local function sendCode()
    if #towers == 0 then
        term.setBackgroundColor(colors.black)
        term.clear()
        printCentered("NO TOWERS TO SEND TO!", colors.red)
        sleep(2)
        return
    end

    term.setBackgroundColor(colors.black)
    term.clear()
    printCentered("SEND CODE", colors.cyan)
    term.setCursorPos(1, 2)
    term.setTextColor(colors.white)

    -- List towers
    for i, tower in ipairs(towers) do
        print(i..". Tower ID: "..tower.id.." | Type: "..tower.type)
    end

    write("\nSelect tower number: ")
    local selection = tonumber(read())

    if not selection or not towers[selection] then
        printCentered("Invalid selection.", colors.red)
        sleep(2)
        return
    end

    local selectedTower = towers[selection]
    rednet.send(selectedTower.id,{command="wake"}, port)
    write("Enter code to send (ex: lyoko, xana control, supercomputer control): ")
    local code = read()

    rednet.send(selectedTower.id, {command=code}, port)

    flashScreen(1, colors.green)
    printCentered("Code sent to Tower ID "..selectedTower.id, colors.green)
    sleep(2)
end
local function openRift()
    if #towers == 0 then
        term.setBackgroundColor(colors.black)
        term.clear()
        printCentered("NO TOWERS TO SEND TO!", colors.red)
        sleep(2)
        return
    end

    term.setBackgroundColor(colors.black)
    term.clear()
    printCentered("SEND CODE", colors.cyan)
    term.setCursorPos(1, 2)
    term.setTextColor(colors.white)

    -- List towers
    for i, tower in ipairs(towers) do
        print(i..". Tower ID: "..tower.id.." | Type: "..tower.type)
    end

    write("\nSelect tower number: ")
    local selection = tonumber(read())

    if not selection or not towers[selection] then
        printCentered("Invalid selection.", colors.red)
        sleep(2)
        return
    end

    local selectedTower = towers[selection]
    rednet.send(selectedTower.id,{command="wake"}, port)
    term.clear()
    printCentered("Please Wait", colors.yellow)
    sleep(3)
    rednet.send(selectedTower.id, {request="rift"}, port)
    local event, id, message, _ = os.pullEvent()
    repeat
        event, id, message, _ = os.pullEvent()
        print(message)
    until event == "rednet_message"
    if event == "rednet_message" then
        if message.response == "rift" then

            dial(message.address)

        end
    end
    sleep(2)
end

-- Main menu loop
rednet.open("back") -- or your modem side

startup()

while true do
    term.setBackgroundColor(colors.black)
    term.clear()
    printCentered("SUPERCOMPUTER CONTROL PANEL", colors.cyan)

    term.setCursorPos(1, 2)
    term.setTextColor(colors.white)
    print("1. Wake Towers")
    print("2. Scan Towers")
    print("3. Send Code")
    print("4. Shutdown System")
    print("5. Actavate Rift")

    term.setCursorPos(1, 7)
    write("Select an option: ")

    local choice = read()

    if choice == "1" then
        wakeTower()
    elseif choice == "2" then
        scanTowers()
    elseif choice == "3" then
        sendCode()
    elseif choice == "4" then
        term.setBackgroundColor(colors.black)
        term.clear()
        printCentered("SYSTEM SHUTDOWN...", colors.red)
        sleep(2)
        os.shutdown()
    elseif choice == "5" then
        openRift()
    elseif choice == "update" then
        rednet.broadcast({command="update"}, port)
        
        flashScreen(10, colors.purple)
    else
        printCentered("Invalid option.", colors.red)
        sleep(2)
    end
end
